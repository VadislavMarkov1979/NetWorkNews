//
//  NetWorkManager.swift
//  TestNews
//
//  Created by –í–ª–∞–¥–∏–º–∏—Ä –ú–∞–∫–∞—Ä–æ–≤ on 17.02.2022.
//

import Foundation
import Alamofire

struct NetWorkManager {
    
    let urlAF = "https://newsdata.io/api/1/news?apikey=pub_4295698524d3396d2c003145bfb797d79969&category=sports,health"
    static let shared = NetWorkManager()
//    var newsData: [CurrentNewsData]?
    
//    func fetchNews(_ completion: @escaping (CurrentNewsData) -> Void) {
//        let urlString = "https://newsdata.io/api/1/news?apikey=pub_4295698524d3396d2c003145bfb797d79969&category=sports,health"
//        guard let url = URL(string: urlString) else { return }
//
//        URLSession.shared.dataTask(with: url) { data, _, error in
//            if let error = error { print(error); return }
//            guard let data = data else { return }
//
//            do {
//                let currentNewsData = try JSONDecoder().decode(CurrentNewsData.self, from: data)
//                completion(currentNewsData)
//            } catch let error as NSError {
//                print(error)
//            }
//        }.resume()
//    }
    
    
    func alamofireGetRequest(_ completion: @escaping (CurrentNewsData) -> Void) {
        let request = AF.request(urlAF)
        request.validate()
        request.responseDecodable(of: CurrentNewsData.self) { (response) in
            switch response.result {
            case .success(let success):
                completion(success)
            case .failure(let error):
                print("üëæüëæüëæüëæüëæüëæüëæ")
                print(error)
                print("üëæüëæüëæüëæüëæüëæüëæ")
            }
        }
        
    }

//     –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏–∑ —Å–ª–æ–≤–∞—Ä—è –Ω–µ —Å–æ–∑–¥–∞–≤–∞—è –º–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
//    –ß–∞—â–µ –≤—Å–µ–≥–æ, –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –∏–∑ –º–æ–¥–µ–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
    
//    func postRequestWithDict() {
////        —Å–æ–∑–¥–∞–µ–º url
//        guard let url = URL(string: "https://jsonplaceholder.typicode.com/posts") else { return }
//
////        —Å–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å, —á—Ç–æ –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä. –í—Å–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è, –¥–æ–∂–Ω—ã –±—ã—Ç—å —Ç–∏–ø–∞ ¬†String
//        let courses = [
//            "name": "Networking",
//            "imageUrl": "image url",
//            "numberOfLessons": "10",
//            "numberOfTests": "8"
//        ]
//
////        —Å–ª–æ–≤–∞—Ä—å –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –Ω–µ–ª—å–∑—è, —Ç–∞–∫ –∫–∞–∫ —Å–ª–æ–≤–∞—Ä—å —ç—Ç–æ —Ç–∏–ø —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–æ —ç—Ç–æ–º—É, –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–¥–∞—é—Ç JSON
////        —á—Ç–æ –±—ã –∏–∑ —Å–ª–æ–≤–∞—Ä—è —Å–¥–µ–ª–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–∏–ø–∞ Data, –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∫–ª–∞—Å—Å JSONSerialization. –≠—Ç–æ—Ç –º–µ—Ç–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª JSON –∏–∑ —Å–ª–æ–≤–∞—Ä—è
//        guard let courseData = try? JSONSerialization.data(withJSONObject: courses, options: []) else { return }
//
////        —Å–æ–∑–¥–∞–µ–º —Ç–∏–ø URLRequest. –ü–æ—Ç–æ–º—É –∫–∞–∫ —Å–∞–º URLRequest –ø–æ—Ç–æ–º—É –∫–∞–∫ –æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –±–æ–ª—å—à–µ, —á–µ–º –ø—Ä–æ—Å—Ç–æ url
////        URLRequest —ç—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –ø–æ —ç—Ç–æ–º—É –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä
//        var request = URLRequest(url: url)
//
////        –Ω–∞–ø–æ–ª–Ω—è–µ–º –æ–±—ä–µ–∫—Ç request.
////        –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞. –¢ –µ POST –∑–∞–ø—Ä–æ—Å
//        request.httpMethod = "POST"
//
////        –æ–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–ø—Ä–æ—Å–∞. –¢ –µ —á—Ç–æ –ø–µ—Ä–µ–¥–∞–µ–º
//        request.httpBody = courseData
//
////        –∑–∞–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞. –ï—Å–ª–∏ –Ω–µ –∑–∞–¥–∞—Ç—å —ç—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞, —Å–µ—Ä–≤–µ—Ä –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç –¥–∞–Ω–Ω—ã–µ ("–∫–ª—é—á": "–∑–Ω–∞—á–µ–Ω–∏–µ")
//        request.addValue("application/json", forHTTPHeaderField: "Content-Type")
//
////        –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –∑–∞–ø—Ä–æ—Å–∞, –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
//        URLSession.shared.dataTask(with: request) { data, response, error in
//            guard let data = data, let response = response else {
//                print(error)
//                return
//            }
//            print(response)
////      —á—Ç–æ –±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ –ø–µ—Ä–µ–¥–∞–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å JSON —Ñ–∞–π–ª —á–µ—Ä–µ–∑ JSONSerialization.jsonObject
//            do {
//                let course = try JSONSerialization.jsonObject(with: data, options: [])
////                print(course)
//            } catch let error {
////                print(error)
//            }
//        }.resume()
//    }
//
//    //        –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å –ø–æ–º–æ—â—å—é –º–æ–¥–µ–ª–∏
//
//    func postRequestWithModel() {
//        guard let url = URL(string: "https://jsonplaceholder.typicode.com/posts") else { return }
//
////            –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–¥–µ–ª–∏ CourseV3
//        let course = CourseV3(
//            name: "Networking",
//            imageUrl: "image url",
//            numberOfLessons: "65",
//            numberOfTests: "40"
//        )
//
////            –î–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≤ JSON –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è JSONEncoder().encode
//        guard let courseData = try? JSONEncoder().encode(course) else { return }
//
//        var request = URLRequest(url: url)
//        request.httpMethod = "POST"
//        request.httpBody = courseData
//        request.addValue("application/json", forHTTPHeaderField: "Content-Type")
//
//        URLSession.shared.dataTask(with: request) { data, _, error in
//            guard let data = data else {
//                print(error)
//                return
//            }
//
//            do {
//                let course = try JSONDecoder().decode(CourseV3.self, from: data)
//                print(course)
//            } catch let error {
//                print(error)
//            }
//        }.resume()
//    }
//
    
    
//    func fetchNews(_ completion: @escaping (CurrentNewsData) -> Void) {
////       —Å–æ–∑–¥–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º url - –∞–¥—Ä–µ—Å
//        let urlString = "https://newsdata.io/api/1/news?apikey=pub_4295698524d3396d2c003145bfb797d79969&category=sports,health"
////       —Å–æ–∑–¥–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç —É–∂–µ url –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ–º
//        guard let url = URL(string: urlString) else { return }
//        let session = URLSession(configuration: .default)
////        —Å–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∫ —Å–µ—Ä–≤–µ—Ä—É —Å –ø–æ–º–æ—â—å—é dataTask
//        let task = session.dataTask(with: url) { data, response, error in
////            –ø—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∏–ª–∏ –ª–∏ –º—ã –¥–∞–Ω–Ω—ã–µ. –ò –µ—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ data –∏ –ø–µ—á–∞–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
//            if let data = data {
////                let dataString = String(data: data, encoding: .utf8)
////                print(dataString)
////                –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON. –¢–∞–∫ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ–º –≤–Ω—É—Ç—Ä–∏ –∫–ª–æ—É–∂–µ—Ä–∞, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥ –º–µ—Ç–æ–¥–æ–º –ø–æ—Å—Ç–∞–≤–∏—Ç—å self. –ò –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ data. –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏ —Å–æ–∑—Ä–∞–Ω—è–µ–º –≤ currentNews
//                let currentNewsJSON = self.parseJSON(withData: data)
//                guard let currentNews = currentNewsJSON else { return }
////                –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON –ø–µ—Ä–µ–¥–∞–µ–º –≤ completion –±–ª–æ–∫
//                completion(currentNews)
//            }
//        }
////        –≤—ã–∑—ã–≤–∞–µ–º resume(), –ø–æ—Ç–æ–º—É —á—Ç–æ –≤—ã–∑—ã–≤–∞—è dataTask. –û–Ω –≤ –ø–æ–¥–≤–µ—à–µ–Ω–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. –ò —á—Ç–æ –±—ã –æ–Ω –Ω–∞—á–∞–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –∏ –ø—Ä–æ–∏–∑–æ—à–µ–ª –∑–∞–ø—Ä–æ—Å –≤—ã–∑—ã–≤–∞–µ–º resume
//        task.resume()
//    }
////    –§—É–Ω–∫—Ü–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON (—Ä–∞—Å–∫–ª–∞–¥—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –º–æ–¥–µ–ª–∏ CurrentNewsData). –§—É–Ω–∫—Ü–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ data —Ç–∏–ø–∞ Data
//    func parseJSON(withData data: Data) -> CurrentNewsData? {
////        –°–æ–∑–¥–∞–µ–º –¥–µ–∫–æ–¥–µ—Ä, –¥–ª—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
//        let decoder = JSONDecoder()
////        JSON decoder, —Ä–∞—Å–∫–æ–¥–∏—Ä—É—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –æ–±—ä–µ–∫—Ç CurrentNewsData. –ö–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞–µ–º —Å –º–µ—Ç–æ–¥–æ–º decode, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø–æ–ª—å–∑–≤–∞—Ç—å try-catch
//        do {
////        —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç currentNews
//        let currentNewsData = try decoder.decode(CurrentNewsData.self, from: data)
//            return currentNewsData
////            print(currentNewsData.results.count)
//        } catch let error as NSError {
//            print(error)
//        }
//        return nil
//    }

    
    
}
